{"creationTimeStamp":"2025-01-10T12:11:05.694Z","modifiedTimeStamp":"2025-01-13T11:22:32.070Z","createdBy":"ssfahe","modifiedBy":"ssfahe","name":"Sample data - simple proc python example.step","displayName":"Sample data - simple proc python example.step","localDisplayName":"Sample data - simple proc python example.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/c1556492-6ef5-4a90-b9d1-3d6248f857f2","uri":"/dataFlows/steps/c1556492-6ef5-4a90-b9d1-3d6248f857f2","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/c1556492-6ef5-4a90-b9d1-3d6248f857f2","uri":"/dataFlows/steps/c1556492-6ef5-4a90-b9d1-3d6248f857f2","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/c1556492-6ef5-4a90-b9d1-3d6248f857f2","uri":"/dataFlows/steps/c1556492-6ef5-4a90-b9d1-3d6248f857f2","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/c1556492-6ef5-4a90-b9d1-3d6248f857f2","uri":"/dataFlows/steps/c1556492-6ef5-4a90-b9d1-3d6248f857f2"},{"method":"POST","rel":"copy","href":"/dataFlows/steps/c1556492-6ef5-4a90-b9d1-3d6248f857f2/copy","uri":"/dataFlows/steps/c1556492-6ef5-4a90-b9d1-3d6248f857f2/copy","responseType":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/c1556492-6ef5-4a90-b9d1-3d6248f857f2","uri":"/dataFlows/steps/c1556492-6ef5-4a90-b9d1-3d6248f857f2","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/c1556492-6ef5-4a90-b9d1-3d6248f857f2","uri":"/dataFlows/steps/c1556492-6ef5-4a90-b9d1-3d6248f857f2","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[{"name":"input_table","displayName":"input_table","localDisplayName":"input_table","minEntries":1,"maxEntries":1,"defaultEntries":0,"type":"table"}],"outputPorts":[{"name":"output_table","displayName":"output_table","localDisplayName":"output_table","minEntries":1,"maxEntries":1,"defaultEntries":0,"type":"table","supportsView":false,"requiresStructure":false}]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"page1\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Input & output tables\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"input_table\",\n\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\"label\": \"Input table\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"output_table\",\n\t\t\t\t\t\"type\": \"outputtable\",\n\t\t\t\t\t\"label\": \"Output table\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page2\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Options\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"These selections will be used to filter the input table.\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"numstepper\",\n\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\"label\": \"Select number of rows for the sample (1-10):\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\"min\": 1,\n\t\t\t\t\t\"max\": 10,\n\t\t\t\t\t\"stepsize\": 1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"columnselector\",\n\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\"label\": \"Select columns to keep for output table:\",\n\t\t\t\t\t\"include\": null,\n\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\"columntype\": \"a\",\n\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"table\": \"input_table\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page3\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text2\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Sample data - simple proc python example.step\\n\\n================================\\nThis step is meant to provide a simple example on using python inside a custom step. \\n\\nPython code can be used as-is if inputs from the custom step UI are mapped to variables with SAS.symget.\\n\\nThe step requires an input table and an output table. \\nOptions tab includes filter conditions that are used to create a sample out of the input table. Users can select columns to include to the output table and number of rows to be included. \\n\\nThe options are meant to provide some examples how different variable types can be used inside the custom step.\\n\\n=================================\\n\\nVersion 1.0 (developed on Viya 2024.12)\\nCreated by Antti Heino (antti.heino@sas.com)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"input_table\": {\n\t\t\t\"library\": \"PUBLIC\",\n\t\t\t\"table\": \"HMEQ\"\n\t\t},\n\t\t\"output_table\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"numstepper\": 5,\n\t\t\"columnselector\": []\n\t}\n}","templates":{"SAS":"/* THIS STEP IS MEANT TO PROVIDE A SIMPLE EXAMPLE ON USING PYTHON INSIDE A CUSTOM STEP */\n/* PYTHON CODE CAN BE USED AS-IS IF INPUTS FROM CUSTOM STEP UI ARE MAPPED TO VARIABLES WITH SAS.symget*/\nproc python;\nsubmit;\n\n#Define variables for selections in the custom step UI\ninput_tbl = SAS.symget(\"input_table\")\noutput_tbl = SAS.symget(\"output_table\")\nnum_rows = int(SAS.symget(\"numstepper\"))\nselected_col = SAS.symget(\"columnselector\")\n\n## Packages and Options\nimport pandas as pd\nimport numpy as np\npd.set_option('display.max_columns', None)\n\n## Input data\ndf = SAS.sd2df(input_tbl)\n\n## Preview the top n rows of the input dataframe\nprint(df.head(num_rows))\n\n#Print values of variables that will be used to filter input data\nprint(num_rows)\nprint(selected_col)\n\n#Format selected columns from the columnselector \ndef format_variable_names(selected_col):\n    # Split the input string into variable names by whitespace\n    variables = selected_col.split()\n    # Return the list of variable names\n    return variables\n\nformatted = format_variable_names(selected_col)\nprint(formatted)\n\n#Create the output df. First filter on selected columns and then on number of rows\ndf_s = df.filter(items=formatted)\ndf_final=df_s.head(num_rows)\n\n## Write the DataFrame as a SAS data set in the output library\nSAS.df2sd(df_final, output_tbl)\n\nendsubmit;\nquit;"}}